// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

contract ProductTraceability {
    struct Farmer {
        string name;
        string location;
        string productDetails;
    }
    
    struct Transporter {
        string name;
        string licensePlate;
        uint timestamp;
    }
    
    struct Retailer {
        string name;
        string storeLocation;
        uint timestamp;
    }

    Farmer[] public farmers;
    Transporter[] public transporters;
    Retailer[] public retailers;

    function addFarmer(string memory name, string memory location, string memory productDetails) public {
        Farmer memory newFarmer = Farmer(name, location, productDetails);
        farmers.push(newFarmer);
    }

    function addTransporter(string memory name, string memory licensePlate, uint timestamp) public {
        Transporter memory newTransporter = Transporter(name, licensePlate, timestamp);
        transporters.push(newTransporter);
    }

    function addRetailer(string memory name, string memory storeLocation, uint timestamp) public {
        Retailer memory newRetailer = Retailer(name, storeLocation, timestamp);
        retailers.push(newRetailer);
    }

    function getFarmers() public view returns (Farmer[] memory) {
        return farmers;
    }

    function getTransporters() public view returns (Transporter[] memory) {
        return transporters;
    }

    function getRetailers() public view returns (Retailer[] memory) {
        return retailers;
    }
}
